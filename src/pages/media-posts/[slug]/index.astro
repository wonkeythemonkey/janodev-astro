---
import { type CollectionEntry, getCollection } from "astro:content";
import MediaPosts from "@layouts/MediaPosts.astro";
import MediaPostDetails from "@layouts/MediaPostDetails.astro";
import getSortedPosts from "@utils/getSortedPosts";
import getPageNumbers from "@utils/getPageNumbers";
import getPagination from "@utils/getPagination";

export interface Props {
  post: CollectionEntry<"mediaposts">;
}

export async function getStaticPaths() {
  const posts = await getCollection("mediaposts", ({ data }) => !data.draft);

  const postResult = posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));

  const pagePaths = getPageNumbers(posts.length).map(pageNum => ({
    params: { slug: String(pageNum) },
  }));

  return [...postResult, ...pagePaths];
}

const { slug } = Astro.params;
const { post } = Astro.props;

const posts = await getCollection("mediaposts");

const sortedPosts = getSortedPosts(posts);

const pagination = getPagination({
  posts: sortedPosts as CollectionEntry<"mediaposts">[],
  page: slug,
});
---

{post ? <MediaPostDetails post={post} /> : <MediaPosts {...pagination} />}
